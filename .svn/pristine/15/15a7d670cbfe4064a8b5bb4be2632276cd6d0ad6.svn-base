import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class GameThread extends Thread {
	Board board;

	public GameThread(Board b) {
		board = b;
	}

	public void run() {
		BufferedReader inputReader = new BufferedReader(new InputStreamReader(
				System.in));
		boolean showedCards = false;
		try {
			while (true) {

				for (Player player : board.getPlayers()) {
					board.setCurrentPlayer(player);
					// only asks a human controlled player for input
					if (player.isControlled()) {

						if (!showedCards) {
							System.out
									.println("Your cards are:\n\n- Characters:");
							for (Enums.Character c : player.getCharacterCards())
								System.out.println("\t" + c.toString());

							System.out.println("\n- Rooms:");
							for (Enums.RoomName r : player.getRoomCards())
								System.out.println("\t" + r.toString());
							System.out.println("\n- Weapons:");
							for (Enums.Weapon w : player.getWeaponCards())
								System.out.println("\t" + w.toString());

						}
						// Rolls the dice
						board.setMovesLeft(2 + (int) (Math.random() * 11));
						while (board.getMovesLeft() >= 0) {
							board.drawBoard();
							System.out
									.printf("%s turn with %d turns left\nYour available moves are:\n",
											player.toString(),
											board.getMovesLeft());
							System.out.println(board.getOptions(player,
									board.getMovesLeft()));
							String move = inputReader.readLine();
							while (board.getGUIMove() == null && move == null) {

								try {
									Thread.sleep(250);
								} catch (InterruptedException e) {
									e.printStackTrace();
								}

							}
							if (move == null)
								board.setMovesLeft(board.getMovesLeft()
										- board.playTurn(player,
												board.getGUIMove(),
												board.getMovesLeft()));
							else
								board.setMovesLeft(board.getMovesLeft()
										- board.playTurn(player, move,
												board.getMovesLeft()));

						}
					}
				}
				showedCards = true;
			}

		} catch (IOException e) {
			System.out.print("The inputReader crashed");
			e.printStackTrace();
		}
	}

	public class GameWonException extends Exception {
		public GameWonException() {
			super();
		}

		public GameWonException(String message) {
			super(message);
		}
	}
}
